{"version":3,"sources":["Collision.ts","sprites/Paddle.ts","sprites/Ball.ts","view/CanvasView.ts","setup.ts","sprites/Brick.ts","helper.ts","index.ts"],"names":[],"mappings":";;AOAA;;AACA;;AAEA;APIA,AMPA,AFAA,AFEA,AGAA,AJAA,AEGA,IHEA,AELA,AGAA,AJAA,AEGA,IDHA,CGAA,CJAA,GDKA,CGFA;AHEA,AOHA,ALFA,AGAA,AJAA,AEGA;AHEA,AMNA,AFAA,AFCA,AGAA,AJAA,AEGA,YHEA,AELA,AGAA,AJAA,AEGA;AHEA,AOCA,ALFI,AGDA,AJEA,AEKA,WHLJ,AEDI,AGDA,AJEA,AEKA,IDNA,CACI,AGFJ,CACY,AJCZ,CACY,EDDhB,CEDI,ACMA,CAAY,CHLhB,AECgB,ADDZ,CDmDH,CCjDe,CIJZ,EAEY,GHDZ,CCMA,CDHY,CCGkB,EFL9B,EAGY,CILZ,EHCA,AGEY,EHER,KAJJ,CGDA,CHKiB,ADHjB,CIEY,CJEA,QAJZ,EIFA,AJOI,EIFA,GJHJ,EIFA,AJOiB,EIFA;ADRrB,AFMgB,AGFA,AJCZ,AEMI,QFNJ,CCCY,AGFA,AFOH,IFNT,EEMI,CFNJ,CCCY,CGFA,AFOM,EDLN,ADDZ,CIDY,KFOc,CAAC,CDLf,EGFA,UFOM,CAAuB,UAAvB,CAAd;AHLN,AOCF,ALAgB,AGFA,AFOR,EHNN,OECc,AGFA,AFOH,EHNX,CAAA,IGMM,CDLQ,ECKO,CDLP,AGFA,CLCd,CAAA,CKDc,CFOY,IDLZ,ECKO,CAAY,GEPnB,ILCd,GAAA,AGMqB,CAAuB,IAAvB,CAAf,IHNW,IAAjB,EAA6B,KAA7B,EAAyC;AACvC,AINJ,AFCY,AGII,AJAA,AEOR,QHLF,CENM,AGII,AJAA,AEOH,GHLH,CAAC,CCFK,EDEV,CAAS,AKFC,AJAA,CDEV,AENM,EGII,CLEG,AENuB,ACWlC,CFPQ,EEOY,CDXkB,CFMtB,CAAC,CKFT,ELEG,AENuB,CFMb,CAAV,AENP,ACWwB,CAAC,EHLJ,KAAK,CAAC,KAAjC,AGKsB,CAAuB,GHJ7C,IAAI,CAAC,AGIiB,CAApB,EHJF,CAAS,CAAT,GAAa,IAAI,CAAC,KAAlB,GAA0B,KAAK,CAAC,GAAN,CAAU,CADpC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,KAAK,CAAC,GAAN,CAAU,CAAV,GAAc,KAAK,CAAC,MAFjC,IAGA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,GAA2B,KAAK,CAAC,GAAN,CAAU,CAJvC,EAKE;AACA,AOHN,ALCQ,AGJQ,AJAA,AEOR,SDHK,AGJG,AJAA,AEOH,IHDA,CGCL,GHDF,AEFE,ACGa,GDHG,AGJR,AJAA,GIAA,AJAA,EEOa,CAAC,EDHtB,MGJQ,AJAA,KEOK,CAAuB,QAAvB,CAAb;AHAH,AIZL,AFUQ,AGXI,AJOI,AEOR,SDHK,AGXD,AJOI,AEOH,IAAL,GAAY,CDHZ,EGXI,CHWY,CDJR,CIP2B,EJO3B,AEOY,CAAC,CEdkB,EHWvC,GGXmC,EAA/B,GJOI,EEOI,CAAuB,OAAvB,CAAZ;AIQR,ALVQ,AGHA,AJDQ,AEOX,SDHQ,AGHA,AJDG,KCIR,GAAa,ADJL,CICR,EJDQ,CICS,OJDT,EICR;ALKJ,AEDQ,AGHJ,AJVI,MCaA,CAAC,EAAE,AGHF,AJVD,EDcD,GEFU,EFEjB,IKJI,AJVI,GIUe,AJViB,IAAI,KAAJ,EIUpC,AJVI;ADeT,AEDS,AGHJ,AFMJ,EAAA,CHZF,CADF,CAaE,CEHU,CAAC,EAAE,AGHF,CHGG,ECGZ,CAAA,IENI,GAAgB,EFMpB,CAAA,KENI,AFMJ,GAAA,YAAA;ACdJ,AFSqB,AGAb,AJuCJ,KCvCI,IGAK,AJuCT,WIvCI,AJuCJ,GIvCuB,AJuCT,UAAC,CIvCX,AJuCU,EAAiB;AM/CnC,AHAA,AFYQ,AGHA,AJuCA,SCpCK,AGHA,CJuCF,CAAC,CAAC,IAAF,ECpCH,CAAe,AGHf,CAAgB,CJuCF,CCpCd,CGHA,EHGqB,CGHC,IHGtB,CGHA,CJuCG,IAA0B,CAAC,CAAC,GAAF,KAAU,WAAvC,EAAoD,KAAI,CAAC,QAAL,GAAgB,KAAhB;ADlC1D,AOVF,AHHA,AFYK,AGHA,AJuCG,AEnCA,EHAN,EIbI,CDaE,EAAA,GCbI,AHgDD,AEnCH,CHAN,ACmCU,CDnCV,ACmCW,CGhD4B,EDa5B,CFmCF,KDnCT,AIb+C,AHgD3B,CDnCpB,AIbgD,ADa1C,MAAY,IAAZ,CFmCG,EGhD8B,CAAuB,ADa5C,CFmCkB,CAAC,AEnCnB,CHAlB,ACmCsC,GDnCtC,ACmCoC,CEnClB,IFmC4B,CGhDP,ADarB,CCbpB,ADaQ,ECXR,CJWoB,AGAA,IHAlB,CGAkB,CHAY,AGAxB,CFmCA,EAAsD,AEnC1C,EAAA,CHAlB,AGAoB,EHAyB,ACmCmB,CAAC,MEnC/C,CAAY,CAAZ,CFmC0C,CEnC3B,CAAf,CFmC2D,CEnCzC,IFmCwB,CEnCnB,MAAL,CAAY,KAA9B,EAAqC,KAAK,MAAL,CAAY,MAAjD,CAAZ;AHAN,AOGF,ANiCK,AEnCA,GAFD,EFkCA,GDjCF,KAAA,GAAA,IAAA;AOMF,AHhBO,AFYH,AGHA,EHGA,AGHA,EEOA,AHhBS,IFYT,AGHA,CHGA,AGHA,GEOQ,GAAG,EHhBW,GGgB1B,AHhB6B,EAAtB,CFYH,AGHA,CHGI,AGHA,IHGA,CAAA,AGHA,CAAA,QHGJ,CGHA,CHGI,CGHA,MHGJ,CGHA,CHGS,CGHA;ALET,AOMJ,ALNI,AGHA,AJwCA,AErCC,IIMD,IPNI,COMC,AN+BL,GM/BQ,CAAZ,IPNiB,GAAG,ECqChB,GDrCA,ACqCgB,UAAC,CAAD,EAAiB;ADnCjC,AMZG,AFAA,AHgDC,IDpCJ,AIZS,KEAI,AJWb,AGHA,CLIM,ACoCC,CDpCA,ACoCC,CAAC,EGhDU,EHgDZ,CGhDe,CJYtB,CAAe,AIZZ,EEAA,ALgDe,GKhDO,AJWzB,AGHA,KLIgB,GCoCT,EDpCQ,EAAQ,ACoCU,CDpClB,ACoCmB,CAAC,CDpCX,ECoCS,KAAU,WAAvC,EAAoD,KAAI,CAAC,QAAL,GAAgB,IAAhB;ADnCtD,AMZD,ACiBL,ALNQ,AGHA,AJwCA,AErCJ,EAAA,OGXQ,ACiBH,CPLC,ACoCC,CAAC,CAAC,AErCT,CDAW,AGHA,AFGX,EHCU,CAAC,ACoCJ,ECrCS,AGHA,EESpB,CAAqB,AN+BC,CKhDJ,AHWd,CAAA,EIMJ,CLNQ,CKM6B,AFT7B,CCRI,CAAa,GNYf,CAAsB,ACoCrB,IDpCD,ACoC4B,CAAC,AErCnC,CHCkC,AMZZ,ALgDc,EErCpC,CGXqB,ALgDa,EDpC5B,AMZqB,CNYzB,EAAwC,ACoCE,IKhDvB,AHWL,EGXqB,CAAhB,EAAiB,GLgDlC,EAAsD,GErC1D,EFqC8D,AErCL,CFqCM,SAAL,GAAiB,IAAjB;ADnCtD,AMZC,ACiBL,AHlBG,AFYF,AGHA,AJwCA,AEtCD,EIOA,EHlBS,CFUA,AGHA,AJuCT,CM5BI,CAAC,CPLD,AMZO,AHUX,GGVc,CNYN,CAAC,AGFT,CGViB,AFDE,CGkBnB,CAAc,AJPd,CCXsB,CECD,CAAC,AFDnB,CDWH,IGViB,CAAW,CAAC,GNYzB,AMZ0B,ACiB9B,CDjBiB,IAAkB,iBAA9B;ACkBL,EAAA,QAAQ,GAAG,KAAX,GLTS,AGHA;ALQL,AMbC,ACkBR,AHnBM,AHAC,IGAK,IECE,CLDF,EKCK,CNaN,EMbS,ALDb,CKCc,ENaL,AIdS,AHAL,CDcH,AMbO,EFDI,CAAtB,CHAC,EDcI,KAAiB,CAArB,EAAwB,GMbvB;ANcC,AMZD,AJMI,AGHA,AJLL,GCQJ,AGHA,KCHW,CAAC,ALFH,CDcH,EMZS,INYH,CAAC,GCdT,GDcE,ACdiB,CDcH,CAAd,EAAiB,CAAjB,MCdF,CKE2B,GAAG,IAAI,qBAAc,oBAAlB,CAA7B;ANaA,AMZA,ACgBT,AHnBO,AFWH,AGHA,AJPI,AESA,EDCJ,AGHA,EDRS,CDUL,EAAA,CGPO,AJQX,AGHA,CLKI,AMVQ,ACgBP,ALRL,AGHA,AJPS,CESL,EGPW,GNYJ,AIfS,ADUX,GCVc,CGmB3B,CAAoB,AJTZ,CFTA,ECUJ,AGHA,CEWJ,AHnBiC,AFWzB,AGHA,AJPoB,EMkBQ,AJTlB,CCTd,CFUI,CAAA,AGHA,CAAA,AFEA,CCTA,CAAC,EDSS,CGPiB,CLF3B,AESU,CCTd,CEEkC,AFFvB,AFUX,CEVY,ACOZ,CHGI,CGHA,AFEU,CGPwB,GFFpB,CAAC,ADSL,CAAV,CDCJ,CGHA,CHGU,ACDI,CCTF,ACOF,GDPiB,CDSb,CAAV,GAAU,EAAA,CAAE,EGPqC,GFFb,GAAG,CAAhC,IAAqC,GDSlC,CAAmB,KGPC,CAA7B,AFFL,CDSc,EAA4B,CCToB,WDSpB,ECVb,GAE7B,GAFG;AJgBG,AMXD,ACeL,ANlBI,AEQ4C,EIUhD,IAAI,CAAC,CDfI,CJMT,AGHA,AJNS,CDcH,GGN0C,EHMrC,AMXK,ACehB,CPJY,AOIE,CNlBV,GKGiB,ALHD,CKGf,CNWC,CMXmB,CJMzB,AGHA,ELQsB,AGNuC,CHMvD,AGNwD,CIU9D,ANlBI,EKG4B,EHK6B,CGLpC,AHKuB;AHO3C,AMVA,ACcL,AHlBG,AFSC,AGHA,AJNA,AEO+D,EIWnE,EHlBS,CDOK,CAAV,GFPK,CMkBD,CDdH,ECcM,ALTA,AGHA,GDNU,CHAjB,CMkBJ,ALTgB,AGHA,CDNQ,CHAJ,KKIf,AFJyB,AHA1B,CKKQ,AJIR,EERJ,CEGK,ADED,ECDW,CACN,AFLL,CAAC,GEKQ,EFLb,CAAW,CAAC,MAAM,CAAC,CEKV,CACG,IFNA,GAAgB,WEKnB,EAEG,AFP6B,GAAG,CAAjC,IAAsC,UAAjD,CEKS,EAGG,CFRmD,aADjC,GAE9B,EAFG;AESU,ACUhB,ALTI,AGHA,AJNG,AEOH,GAFD,EDEU,AGHA,CCIG,CAAC,EAAA,ALRL,CKQG,QLRR,GAAiB,KAAjB;ADcA,AMNY,AFNb,AHDC,IGCK,EEMO,CAAC,CNMb,CMNa,ALPR,OGCY,CJYR,EIZW,CJYR,ACbZ,CCMM,AGHA,AJHW,CGClB,EJYC,ACbA,GAAuB,KAAvB,CARa,CAUb;ADYD,AMPS,ACYhB,AJXI,EAAA,GGJS,EAIG,ECWP,GJXL,CAAA,IIWJ,CACI,IADJ,AJXI,CAAA,CIaA,GDbyB,GCW7B,EAGI,AJdA,EGAY,CAJH,AHIT,EGCY,CCUhB,EAII,IAJJ,CJXc,CIgBV,IJhBA,EAAuB,GIW3B,EDV6B,ACeL,ODfR,CALH,CADM,CADV,CAAA;ANaJ,AMHC,ACcF,AHxBG,AFIO,AGHA,AJAN,AEMA,EIiBJ,CDjCQ,AJaR,AGHA,CDDS,AHCL,CDCJ,AMQI,CCcA,CDjCI,ACiCH,CDjCJ,AHgBO,IIiBR,ANvBY,CAAC,AEMA,ICPS,GAAG,EAAtB,GDOC,EAAuB,EFNvB,CAA0B,EEME,OFN5B,EAAqC,GEMd,CAAkB,CFNC,QEMnB,GAA8B,EFNrD,GEM0D,CAAC,QAAN,EAA9B;AHO3B,AMHF,ACcE,ALjBA,AGHA,AJHI,AEMH,EIiBD,ALjBA,AGHA,CFCA,CFJI,EMuBA,CAAC,CLjBL,AGHA,CHGA,AGHA,ELSO,CCZK,CAAC,IMuBb,CAAgB,EPXhB,GENA,AGHA,CEoBA,ALjBI,AGHA,IHGA,CAAA,AGHA,AJHA,CIGA,AJH0B,OAA1B,CCMJ,CGHA,AJHuC,CCMnC,CGHA,GJHwC,CCM5C,CGHA,CHGO,CGHA,OJHH;ADaL,AOWC,AHzBG,AHEF,EMuBD,CP3BF,CIEW,EGyBL,CAAC,ELlBL,AGHA,QEqBA,AHzBsB,CGyBN,EHzBS,GAAtB,CGyBH,ALlBA,AGHA;AEsBA,ALlBI,AGHA,AFIJ,EIiBA,AJjBA,IIiBI,CAAC,KJjBL,CDDW,AGHA,AFIX,IIiBA,CAAgB,ALlBA,AGHA,IEqBhB,AJjBA,CAAA,CIYoB,CAOpB,CLpBI,AGHA,KFIJ,GAAA,UAAS,IAAT,EAAqB;AHOvB,AIfK,AFQF,AGHA,AJDD,AEKI,EHMN,ACXE,EGJS,CFMF,AGHA,GJCP,AEKQ,CFLR,EDWF,CAAA,CGNe,GCTQ,CDSjB,ECToB,ADSL,EHMrB,AIfK,CJeL,CCXE,CAAI,AEKoB,IAAL,CAAU,CFLzB,CAAA,OEKe,EHMrB,ACXE,CEKyC,CFLrC,CDWN,EGNqB,IFLnB,EAAS,EDWQ,IAAnB,EAA+B,MAA/B,EAA+C,IAA/C,EAA+D;AAC7D,AOYA,ANzBA,AEOC,EIkBD,CJpBA,GIoBI,CAAC,QAAL,GARoB,CAUpB,ELxBO,AGHA;ALcP,AIhBG,IAAM,IJiBP,CCdF,GDcM,CAAC,CIjBY,EJiBjB,CAAS,AIjBW,CJiBpB,AIjBC,GJiBY,GCdf,CDcmB,CAAC,KAAlB,GAA0B,MAAM,CAAC,GAAP,CAAW,CAArC,IACA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,MAAM,CAAC,KADnC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,KAA6B,MAAM,CAAC,GAAP,CAAW,CAH1C,EAIE;AACA,AOSF,ALzBO,AGHA,AJEH,AEOJ,EAAA,CDNA,AGHA,GLmBE,AOUG,IPVC,CAAC,COUI,AJpBX,CIoBY,AN3BD,AEOX,KFPgB,IEOhB,CAAA,EIoBK,EPVH,EOU0B,AN3BxB,IEOJ,EIoBkC,CAAC,AJpBnC,GIoB4B,CAAW,CAAX,GAAe,CAAvC,CJpBO,GIqBN,EJrBL,EAAuC,EIqB5B,CAAC,aAAP,IAAwB,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,MAAM,CAAC,KAFvE,EAGE;APXD,AOYG,AHjCD,AFQH,AGHA,AJDC,ECID,AGHA,EE4BI,AHjCK,CJaoD,ACXpD,CDoBT,EEdA,AGHA,CHGA,AGHA,CE4BU,CAAC,EHjCO,GAAG,EAAlB,GGiCC,ELzBJ,AGHA,CHGI,AGHA,IHGA,CAAA,AGHA,CAAA,QHGJ,CGHA,CHGI,CGHA,MHGJ,CGHA,CHGS,CGHA;ALkBT,AOWC,SL1BD,AGHA,YJHS,GCMT,AGHA;ADJG,AFQC,AGHA,AFKA,ICVK,IDUD,CAAC,IDFE,AGHA,CFKP,CCVgB,CDUJ,ECVO,AFQP,AGHA,GDLb,MFQC,CGHA;AE8BJ,AL1BC,AGHA,AJLQ,AEWL,EIuBJ,CNlCA,ECMS,AGHA,AFQL,EAAA,GAAA,CIuBK,CAAC,GJvBD,OAAL,MAAY,EIuBhB,CAA6B,CJvBzB,GIuBJ,CJvBgB,CIuBmB,CJvBnB,KIuBhB,AJvBgB,EIuB2B,GJvB3B,CIuBhB,AJvBI,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,SAAF,CACR,KAAK,CAAC,KADE,EAER,KAAK,CAAC,GAAN,CAAU,CAFF,EAGR,KAAK,CAAC,GAAN,CAAU,CAHF,EAIR,KAAK,CAAC,KAJE,EAKR,KAAK,CAAC,MALE,CAAZ;AHWJ,AOaA,AHnCG,AHGH,AEeC,EFfD,CEKA,CCRS,EGmCH,EPbF,ACnBJ,CAAA,GDmBQ,CAAC,EItBW,CJsBhB,CAAS,CAAT,AItBmB,EGmCH,CPbH,AItBd,AFMM,AGHA,EEgCc,ANhCvB,CAAI,CDmBiB,CAAC,ICnBlB,CAAA,CDmBa,AOae,CPbH,AOaI,KPbhB,ECnBjB,CDmBqC,CCnBjC,GDmBqC,CAAC,IOanB,ANhCvB,CDmBI,AOa+C,CNhCzC,GDmByC,AOa5B,EAAkC,EPbF,CAAC,GAAL,AOa5B,CPbqC,AOa5D,CPbmD,GAAa,CAAhE,EAAmE;AACjE,MAAA,GCpBF,CDoBM,CAAC,aCpBP,GDoBE;AACD,AOaD,AHnCG,AFIM,AGHA,AJCL,AEgBJ,EAAA,CDdA,AGHA,CDDS,CJSoD,AErCjE,CFmDI,AOYI,AL3BJ,MCUA,CFhBW,AEgBX,GClBqB,EHEL,CGFmC,CGmCnD,EAAoB,AJjBpB,CAAA,OFhBI,GEgBJ,GAAA,UAAW,KAAX,EAAyB;AIkBrB,AHnCN,ACIE,AJFC,AEeD,EEbA,EE+BI,CHnCH,AHAS,GIIV,AFaA,CIkBS,AF/BT,IE+Ba,AJlBb,CIkBI,EJlBJ,IAAA,EClBmD,CCKnD,CAAI,KAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AEgCN,AHnCN,AFOE,EAAA,EK4BI,CHnCH,CFOD,CAAA,CK4BQ,CAAC,AFhCT,OHIA,CAAA,CK4BI,CAAe,ENpCT,GMoCN,AHrC+C,ACKnD,QHIA,GAAA,YAAA;AFeA,AOcC,AHnCH,AFOM,AGJA,AFaA,GILgB,CA0BpB,AJrBI,CChBH,GJqBG,CEdK,ACSA,CAAC,EHKF,CAAC,AKlBE,CHIP,CAAW,CFcX,AEdA,CFcS,AGLT,CHKA,AKlBY,AFaE,CDTC,CAAC,CFcH,CAAjB,EAAoB,CIxB+B,AFU1B,GCSP,CEbd,CHIgB,CAAW,CAA3B,CCSc,EAAK;AHMrB,AIrBJ,AFOG,AGJA,AJNS,AEkBiB,GDV3B,ADRA,EGGC,ACCS,CLoBR,IAAI,CAAC,EGNoB,KAAI,CAAC,ICnBmB,IJyBjD,EGNyB,CAAgB,KAAhB,CAAA;AHO1B,AIrBH,ACIE,AJLA,AEeiD,EFfjD,GGCC,ADcG,GFfJ,CAAA,cAAA,CAAI,MAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;ADuBR,AOcC,AHzCmD,AFanD,ACOC,CCpBE,CFaH,CFJF,AGSE,GIuBI,AL5BJ,CAAA,EGHA,AJNA,CMqCQ,CAAC,GAAL,CAAS,CAAT,AL5BJ,CAAA,EK4BiB,GF/BN,CE+BU,CAAC,ANrCtB,IIMA,EE+BiB,AF/BQ,CE+BI,EL5B7B,GAAA,CK4BA,EAAqC,QAAQ,CL5B7C,EK4BgD,IAAX,CA3BjB,CA4BpB;AL5BI,AGHA,AJNA,SCSK,EGHA,EJNE,CCSP,CAAW,CAAX,EDTY,CCSG,CAAC,EGHhB,GHGqB,AGHF,CJNnB,ICSgB,CAAW,AGH3B,CHGA;AFcR,AOeI,AHnCG,AFOF,AGHA,AJNA,AEeL,GDRI,CELS,CCHC,AJDH,CMuCH,GPfR,AGPA,GIsBc,CAAC,GHnCU,EJoBzB,COeQ,AHnC+C,ADavD,KIsB0B,CAAtB,EAAyB,OAAO,UAAU,CAAC,IAAD,CAAjB,CA7BL,CA8BpB;APnEJ,AIgCE,ADlCF,CHEA,AGFA,EHEA,AGFA,ECkCK,CADkD,eCHzC,AJDH;AMyCP,AHnCF,AFME,EAAA,GENC,CGmCG,AHrC+C,AFQnD,CAAA,OK6BA,EAAc,AL7Bd,CAAA,MK6BqB,UL7BrB,CK6BgC,CAAC,CL7BjC,GK6BgC,CAAlB,QL7Bd;AK+BA,AHpCF,AFMM,AGZM,AJDH,EM2CP,CF1CA,AJDA,EGOC,CAHkD,GFS1C,KAAL,CAAW,CAAX,GAAe,CAAC,GK8BC,CAAC,CL9BG,KAAL,CAAW,CAA3B,IK8BkB;AAAM,AHnC9B,AFMG,AGLL,AJLI,EAAA,CCQA,EEJC,CAJkD,EHAnD,CIKJ,AJLI,EMuC4B,GFlChC,KEkCwC,CAAC,GNvCrC,CMuCoC,ANvChC,EMuCuC,INvCvC,CAAA,CMuCgC,EAAe,MAAf,ANvCpC,EMuC2D,ANvCvD,IMuCgC,EAA6B,CNvCjE,EAAS,MMuC2B,CAAR;AAA+C,AHlC7E,ACzCF,CAAA,EE2EyB,AF3EzB,CE2EI,CHlCC,CALkD,CAKhD,EHLH,eAAA;AMwCH,AL5BG,ADXI,ECWJ,IAAA,CAAA,MDXW,GCWX,CAAA,CDXgB,OCWhB,GAAA,CDXI,WCWJ;AEZmD,AFa/C,ADXH,CGFE,EAQP,EHRa,ICaA,GAAL,CAAS,CAAT,IAAe,KAAK,KAAL,CAAW,CAA1B;AK6BR,AL5BQ,SK4BC,AL5BI,GAAL,CAAS,CAAT,IK4BR,AL5BuB,CK4BJ,EN1CN,EM0Cb,AL5B4B,EK4BO,GL5BZ,CAAW,CAA1B;AK6BJ,AL5BC,GAHD;AKgCA,AHnCG,AHTM,EM4CT,CN5CA,CGSS,GGmCJ,EHnCS,CGmCN,CAAR,CHnCiB,CACnB,CADmB,EAChB,CADgB,EACb,CADa,EACV,CADU,EACP,CADO,EACJ,CADI,EACD,CADC,EACE,CADF,EACK,CADL,EACQ,CADR,EAEnB,CAFmB,EAEhB,CAFgB,EAEb,CAFa,EAEV,CAFU,EAEP,CAFO,EAEJ,CAFI,EAED,CAFC,EAEE,CAFF,EAEK,CAFL,EAEQ,CAFR,EAGnB,CAHmB,EAGhB,CAHgB,EAGb,CAHa,EAGV,CAHU,EAGP,CAHO,EAGJ,CAHI,EAGD,CAHC,EAGE,CAHF,EAGK,CAHL,EAGQ,CAHR,EAInB,CAJmB,EAIhB,CAJgB,EAIb,CAJa,EAIV,CAJU,EAIP,CAJO,EAIJ,CAJI,EAID,CAJC,EAIE,CAJF,EAIK,CAJL,EAIQ,CAJR,EAKnB,CALmB,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP,CALO,EAKJ,CALI,EAKD,CALC,EAKE,CALF,EAKK,CALL,EAKQ,CALR,EAMnB,CANmB,EAMhB,CANgB,EAMb,CANa,EAMV,CANU,EAMP,CANO,EAMJ,CANI,EAMD,CANC,EAME,CANF,EAMK,CANL,EAMQ,CANR,CAAd;AGoCH,AL7BJ,ADZI,EMyCA,ANzCA,IMyCI,CAAC,CNzCL,CCYJ,ADZI,ICYJ,EK6BI,CAAc,EAAd,KNzCA,CAAI,MAAA,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AM0ChB,ALlFJ,CAAA,CKkFI,CLlFJ,GKkFQ,CAAC,EN1CL,OM0CA,CAAe,CAAf,EAJ+B,CAM/B,GN5CA;AACI,aAAO,KAAK,QAAZ;AM4CJ,AN3CC,KAFe,CM6CV,SAAS,GAAG,IAAI,oBAAJ,EAAlB,CAP+B,CAS/B;qBN/CgB;AMgDhB,MAAM,MAAM,GAAG,2BAAf,CAV+B,CAY/B;ANlDgB,GAAhB;AMmDA,ANhDA,EAAA,IMgDM,ENhDN,CAAA,CMgDU,GAAG,IAAI,MNhDjB,CAAI,GMgDS,CACT,ENjDA,CAAA,SAAJ,EAAI,GMgDS,EAET,UNlDJ,EAAiB,IMgDJ,EAGT;AAAE,IAAA,CAAC,EAAE,ENnDT,eAAA,CMmDI;AAAkB,ANlDlB,IMkDkB,CAAC,EAAE,MNlDd,KAAK,SAAZ;AMkDA,ANjDH,GM8CY,EAIT,ANpDa,aMgDJ,CAAb,CAb+B,CAoB/B;qBNvDiB;AMwDjB,MAAM,MAAM,GAAG,IAAI,cAAJ,CACX,mBADW,EAEX,mBAFW,EAGX,oBAHW,EAIX;AAAE,AN5DW,GAAjB,CM4DM,CAAC,EAAE,oBAAL;AAAoB,IAAA,CAAC,EAAE,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,oBAArB,GAAqC;AAA5D,ANxDJ,EAAA,CMoDe,EAKX,GNzDJ,CAAA,SAAA,CAAA,CMoDe,CAAf,QNpDA,GAAA,YAAA;AM4DA,AN3DI,EM2DJ,MN3DO,EM2DC,CAAC,EN3DG,EM2DJ,EAAO,IN3DX,EM2DI,AN3Dc,EM2DC,GN3DI,GM2DnB,AN3Dc,CAAS,CM2DA,AN3DT,IM2Dd,AN3D4B,EM2DC,GN3DI,KAAnB,CM2Dd,CAAR;AACH,AN3DO,EM6DR,MN7DW,KAAK,SAAR,EAAmB,KAAK,GAAL,CAAS,CAAT,IAAc,KAAK,KAAnB;AACtB,GAHD;;AMgEJ,ANjDA,IMiDM,IAAI,CNjDV,EMiDa,IAAI,ANjDjB,sBMiDa,CAAe,YAAf,CAAb;AACA,ANhHA,CAAA,EAAA,CMgHI,CAAC,eAAL,CAAqB,SAArB","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["// Types\nimport { Brick } from './sprites/Brick';\nimport { Paddle } from './sprites/Paddle';\nimport { Ball } from './sprites/Ball';\nimport { CanvasView } from './view/CanvasView';\n\n\nexport class Collision {\n  isCollidingBrick(ball: Ball, brick: Brick): boolean {\n    if (\n      ball.pos.x < brick.pos.x + brick.width &&\n      ball.pos.x + ball.width > brick.pos.x &&\n      ball.pos.y < brick.pos.y + brick.height &&\n      ball.pos.y + ball.height > brick.pos.y\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  // Check ball collision with bricks\n  isCollidingBricks(ball: Ball, bricks: Brick[]): boolean {\n    let colliding = false;\n\n    bricks.forEach((brick, i) => {\n      if (this.isCollidingBrick(ball, brick)) {\n        ball.changeYDirection();\n\n        if (brick.energy === 1) {\n          bricks.splice(i, 1);\n        } else {\n          brick.energy -= 1;\n        }\n        colliding = true;\n      }\n    });\n    return colliding;\n  }\n\n  checkBallCollision(ball: Ball, paddle: Paddle, view: CanvasView): void {\n    // 1. Check ball collision with paddle\n    if (\n      ball.pos.x + ball.width > paddle.pos.x &&\n      ball.pos.x < paddle.pos.x + paddle.width &&\n      ball.pos.y + ball.height === paddle.pos.y\n    ) {\n      ball.changeYDirection();\n    }\n    // 2. Check ball collision with walls\n    // Ball movement X constraints\n    if (ball.pos.x > view.canvas.width - ball.width || ball.pos.x < 0) {\n      ball.changeXDirection();\n    }\n    // Ball movement Y constraints\n    if (ball.pos.y < 0) {\n      ball.changeYDirection();\n    }\n  }\n}","import { Vector } from './../types';\n\nexport class Paddle {\n    private paddleImage: HTMLImageElement = new Image();\n    private moveLeft: boolean;\n    private moveRight: boolean;\n\n    constructor(\n        private speed: number,\n        private paddleWidth: number,\n        private paddleHeight: number,\n        private position: Vector,\n        image: string\n    ) {\n        this.speed = speed;\n        this.paddleWidth = paddleWidth;\n        this.paddleHeight = paddleHeight;\n        this.position = position;\n        this.moveLeft = false;\n        this.moveRight = false;\n        this.paddleImage.src = image;\n\n        // Event Listeners\n        document.addEventListener('keydown', this.handleKeyDown);\n        document.addEventListener('keyup', this.handleKeyUp);\n    }\n\n    //Getters\n    get width(): number {\n        return this.paddleWidth\n    }\n    get height(): number {\n        return this.paddleHeight;\n    }\n    get pos(): Vector {\n        return this.position;\n    }\n\n    get image(): HTMLImageElement {\n        return this.paddleImage;\n    }\n\n    get isMovingLeft(): boolean {\n        return this.moveLeft;\n    }\n    get isMovingRight(): boolean {\n        return this.moveRight;\n    }\n\n    movePaddle(): void {\n        if(this.moveLeft) this.pos.x -= this.speed\n        if(this.moveRight) this.pos.x += this.speed\n    }\n\n    handleKeyUp = (e: KeyboardEvent): void => {\n        if(e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = false;\n        if(e.code === 'ArrowRight' || e.key === 'ArrowRight') this.moveRight = false;\n    }\n\n    handleKeyDown = (e: KeyboardEvent): void => {\n        if(e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = true;\n        if(e.code === 'ArrowRight' || e.key === 'ArrowRight') this.moveRight = true;\n    }\n\n}","import { Vector } from './../types';\n\nexport class Ball {\n    private speed: Vector;\n    private ballImage: HTMLImageElement = new Image();\n\n    constructor(\n        speed: number,\n        private ballSize: number,\n        private position: Vector,\n        image: string,\n\n    ) {\n        this.ballSize = ballSize;\n        this.position = position;\n        this.speed = {\n            x: speed,\n            y: -speed,\n        }\n        this.ballImage.src = image;\n    }\n\n    //Getters\n    get width(): number {\n        return this.ballSize;\n    }\n    get height(): number {\n        return this.ballSize;\n    }\n\n    get pos(): Vector {\n        return this.position;\n    }\n\n    get image(): HTMLImageElement {\n        return this.ballImage;\n    }\n\n    //Methods\n    changeDirection(): void {\n        this.speed.y = -this.speed.y;\n    }\n\n    changeXDirection(): void {\n        this.speed.x = -this.speed.x;\n    }\n    changeYDirection(): void {\n        this.speed.y = -this.speed.y;\n    }\n\n    moveBall(): void {\n        this.pos.x +=  this.speed.x;\n        this.pos.y +=  this.speed.y;\n    }\n}","// Types\nimport { Ball } from './../sprites/Ball';\nimport { Paddle } from './../sprites/Paddle';\nimport { Brick } from './../sprites/Brick';\n\nexport class CanvasView {\n    canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D | null;\n    private scoreDisplay: HTMLObjectElement | null;\n    private start: HTMLObjectElement | null;\n    private info: HTMLObjectElement | null;\n\n    constructor(canvasName: string) {\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\n        this.context = this.canvas.getContext('2d');\n        this.scoreDisplay = document.querySelector('#score');\n        this.start = document.querySelector('#start');\n        this.info = document.querySelector('#info');\n    }\n\n    clear(): void {\n        this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    };\n\n    initStartButton(startFunction: (view: CanvasView) => void): void {\n        this.start?.addEventListener('click', () => startFunction(this));\n    }\n\n    drawScore(score: number): void {\n        if (this.scoreDisplay) this.scoreDisplay.innerHTML = score.toString();\n    }\n\n    drawInfo(text: string): void {\n        if (this.info) this.info.innerHTML = text;\n    }\n\n    drawSprite(brick: Brick | Paddle | Ball): void {\n        if (!brick) return;\n\n        this.context?.drawImage(\n            brick.image,\n            brick.pos.x,\n            brick.pos.y,\n            brick.width,\n            brick.height\n        )\n    }\n\n    drawBricks(brick: Brick[]): void {\n        brick.forEach(brick => this.drawSprite(brick));\n    }\n}\n","import RED_BRICK_IMAGE from './images/brick-red.png';\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE\n};\n\nexport const BRICK_ENERGY: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3 // Purple brick\n};\n\n// prettier-ignore\nexport const LEVEL = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\n];\n","import { Vector } from './../types';\n\nexport class Brick {\n    private brickImage: HTMLImageElement = new Image();\n\n    constructor(\n        private brickWith: number,\n        private brickHeight: number,\n        private position: Vector,\n        private brickEnergy: number,\n        image: string\n    ){\n        this.brickWith = brickWith;\n        this.brickHeight = brickHeight;\n        this.position = position;\n        this.brickEnergy = brickEnergy;\n        this.brickImage.src = image\n    }\n\n    //Getters\n    get width(): number {\n        return this.brickWith;\n    }\n    get height(): number {\n        return this.brickHeight;\n    }\n\n    get pos(): Vector {\n        return this.position;\n    }\n\n    get image(): HTMLImageElement {\n        return this.brickImage;\n    }\n\n    get energy(): number {\n        return this.brickEnergy;\n    }\n\n    //Setter \n    set energy(energy: number) {\n        this.brickEnergy = energy;\n    } \n}","import { Brick } from './sprites/Brick';\nimport {\n     BRICK_IMAGES,\n     LEVEL,\n     STAGE_COLS,\n     STAGE_PADDING,\n     BRICK_WIDTH,\n     BRICK_HEIGHT,\n     BRICK_PADDING,\n     BRICK_ENERGY\n } from './setup';\n\n export function createBricks(): Brick[] {\n     return LEVEL.reduce((ack, element , i) => {\n         const row = Math.floor(i+1) / STAGE_COLS;\n         const col = i % STAGE_COLS;\n\n         const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\n         const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\n\n         if (element === 0 ) return ack;\n\n         return [\n             ...ack,\n             new Brick(\n                BRICK_WIDTH,\n                BRICK_HEIGHT,\n                {x, y},\n                BRICK_ENERGY[element],\n                BRICK_IMAGES[element]\n             )\n         ]\n     }, [] as Brick[]);\n }\n","import { Collision } from './Collision';\nimport { Paddle } from './sprites/Paddle';\nimport { Brick } from './sprites/Brick';\nimport { Ball } from './sprites/Ball';\nimport { CanvasView } from './view/CanvasView';\n\n\n// Images\nimport PADDLE_IMAGE from './images/paddle.png';\nimport BALL_IMAGE from './images/ball.png';\n\n// Level and colors\nimport {\n    PADDLE_SPEED,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    PADDLE_STARTX,\n    BALL_SPEED,\n    BALL_SIZE,\n    BALL_STARTX,\n    BALL_STARTY\n} from './setup';\n\n\n// Helpers\nimport { createBricks } from './helper';\n\nlet gameOver = false;\nlet score = 0;\n\nfunction setGameOver(view: CanvasView) {\n    view.drawInfo('Game Over !');\n    gameOver = false;\n}\nfunction setGameWin(view: CanvasView) {\n    view.drawInfo('Game WON !');\n    gameOver = false;\n}\n\nfunction gameLoop(\n    view: CanvasView,\n    bricks: Brick[],\n    paddle: Paddle,\n    ball: Ball,\n    collision: Collision\n) {\n    view.clear();\n    view.drawBricks(bricks);\n    view.drawSprite(paddle);\n    view.drawSprite(ball);\n\n    // Move ball\n    ball.moveBall();\n\n    // Move paddle with check on margin\n    if (\n        (paddle.isMovingLeft && paddle.pos.x > 0) ||\n        (paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width)\n    ) {\n        paddle.movePaddle();\n    }\n\n    collision.checkBallCollision(ball, paddle, view);\n    const collidingBrick = collision.isCollidingBricks(ball, bricks);\n\n    if (collidingBrick) {\n        score += 1;\n        view.drawScore(score);\n    }\n\n    // Game Over when ball leaves playField\n    if (ball.pos.y > view.canvas.height) gameOver = true;\n    // If game won, set gameOver and display win\n    if (bricks.length === 0) return setGameWin(view);\n    // Return if gameover and don't run the requestAnimationFrame\n    if (gameOver) return setGameOver(view);\n\n    requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision))\n}\n\nfunction startGame(view: CanvasView) {\n    //Reset displays\n    score = 0;\n    view.drawInfo('');\n    view.drawScore(0);\n\n    //Create a collision istance\n    const collision = new Collision();\n\n    //Create all bricks\n    const bricks = createBricks();\n\n    //create ball\n    const ball = new Ball(\n        BALL_SPEED,\n        BALL_SIZE,\n        { x: BALL_STARTX, y: BALL_STARTY },\n        BALL_IMAGE\n    )\n\n    //Create a  paddle\n    const paddle = new Paddle(\n        PADDLE_SPEED,\n        PADDLE_WIDTH,\n        PADDLE_HEIGHT,\n        { x: PADDLE_STARTX, y: view.canvas.height - PADDLE_HEIGHT - 5 },\n        PADDLE_IMAGE\n    )\n\n    gameLoop(view, bricks, paddle, ball, collision);\n}\n\n// Create a new view\nconst view = new CanvasView('#playField');\nview.initStartButton(startGame);\n\n"]}